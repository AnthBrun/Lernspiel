/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    gameRoles: GameRole;
    gameScenarios: GameScenario;
    decisionOptions: DecisionOption;
    economicIndicators: EconomicIndicator;
    learningContent: LearningContent;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    gameRoles: GameRolesSelect<false> | GameRolesSelect<true>;
    gameScenarios: GameScenariosSelect<false> | GameScenariosSelect<true>;
    decisionOptions: DecisionOptionsSelect<false> | DecisionOptionsSelect<true>;
    economicIndicators: EconomicIndicatorsSelect<false> | EconomicIndicatorsSelect<true>;
    learningContent: LearningContentSelect<false> | LearningContentSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gameRoles".
 */
export interface GameRole {
  id: number;
  title: string;
  /**
   * Used for API calls (e.g., "finance-minister", "central-banker")
   */
  slug: string;
  roleType: 'government' | 'central-bank' | 'opposition' | 'media' | 'citizen' | 'business' | 'academic';
  /**
   * Detailed explanation of the role for players
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Brief description for role selection screen
   */
  shortDescription: string;
  responsibilities?:
    | {
        responsibility: string;
        id?: string | null;
      }[]
    | null;
  powers?:
    | {
        powerName: string;
        powerDescription: string;
        economicImpact?: ('high' | 'medium' | 'low') | null;
        /**
         * How MMT views this power/action
         */
        mmtPerspective?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        /**
         * How traditional economics views this power/action
         */
        traditionalPerspective?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  informationAccess?: {
    economicData?: ('full' | 'partial' | 'public' | 'limited') | null;
    budgetData?: ('full' | 'partial' | 'public' | 'none') | null;
    publicSentiment?: ('realtime' | 'delayed' | 'polls' | 'none') | null;
  };
  maxPlayers: number;
  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';
  gameplayTips?:
    | {
        tip: string;
        id?: string | null;
      }[]
    | null;
  avatar?: (number | null) | Media;
  /**
   * Uncheck to temporarily disable this role
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gameScenarios".
 */
export interface GameScenario {
  id: number;
  title: string;
  slug: string;
  scenarioType:
    | 'economic-crisis'
    | 'inflation'
    | 'recession'
    | 'budget-planning'
    | 'public-investment'
    | 'debt-management'
    | 'employment-crisis'
    | 'international-trade'
    | 'climate-economics'
    | 'social-policy';
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * The narrative context that sets up the economic situation
   */
  backgroundStory: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  learningObjectives?:
    | {
        objective: string;
        id?: string | null;
      }[]
    | null;
  initialConditions?: {
    gdp?: number | null;
    inflation?: number | null;
    unemployment?: number | null;
    publicDebt?: number | null;
    budgetBalance?: number | null;
    interestRate?: number | null;
    publicSentiment?: number | null;
  };
  crisisEvents?:
    | {
        eventTitle: string;
        eventDescription: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        triggerRound?: number | null;
        economicImpact?: {
          gdpImpact?: number | null;
          inflationImpact?: number | null;
          unemploymentImpact?: number | null;
          sentimentImpact?: number | null;
        };
        id?: string | null;
      }[]
    | null;
  availableRoles: (number | GameRole)[];
  requiredRoles?: (number | GameRole)[] | null;
  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';
  estimatedDuration: number;
  maxRounds: number;
  successCriteria?:
    | {
        criterion: string;
        targetValue?: number | null;
        comparisonType?: ('gt' | 'lt' | 'eq' | 'between') | null;
        id?: string | null;
      }[]
    | null;
  debriefingQuestions?:
    | {
        question: string;
        perspective?: ('mmt' | 'traditional' | 'comparison' | 'general') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Private notes for teachers/facilitators
   */
  teacherNotes?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  isActive?: boolean | null;
  /**
   * Show in featured scenarios list
   */
  featured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "decisionOptions".
 */
export interface DecisionOption {
  id: number;
  title: string;
  slug: string;
  category:
    | 'fiscal'
    | 'monetary'
    | 'social'
    | 'infrastructure'
    | 'healthcare'
    | 'education'
    | 'environment'
    | 'trade'
    | 'labor'
    | 'taxation'
    | 'regulation'
    | 'communication';
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Brief description for decision buttons/cards
   */
  shortDescription: string;
  availableToRoles: (number | GameRole)[];
  prerequisites?:
    | {
        prerequisiteType?: ('round' | 'economic' | 'decision' | 'cooperation' | 'budget') | null;
        condition?: string | null;
        value?: number | null;
        id?: string | null;
      }[]
    | null;
  cost?: {
    budgetCost?: number | null;
    politicalCost?: number | null;
    timeCost?: number | null;
  };
  /**
   * Effects that happen immediately when decision is made
   */
  immediateEffects?: {
    gdpImpact?: number | null;
    inflationImpact?: number | null;
    unemploymentImpact?: number | null;
    publicSentimentImpact?: number | null;
    debtImpact?: number | null;
    budgetImpact?: number | null;
  };
  /**
   * Effects that happen after a delay
   */
  delayedEffects?:
    | {
        delayRounds: number;
        gdpImpact?: number | null;
        inflationImpact?: number | null;
        unemploymentImpact?: number | null;
        publicSentimentImpact?: number | null;
        id?: string | null;
      }[]
    | null;
  mmtAnalysis?: {
    mmtRecommendation?:
      | ('strongly-recommended' | 'recommended' | 'neutral' | 'not-recommended' | 'strongly-discouraged')
      | null;
    mmtReasoning?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    mmtAlternative?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  traditionalAnalysis?: {
    traditionalRecommendation?:
      | ('strongly-recommended' | 'recommended' | 'neutral' | 'not-recommended' | 'strongly-discouraged')
      | null;
    traditionalReasoning?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    traditionalConcerns?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  playerFeedback?: {
    successMessage?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    cautionMessage?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    failureMessage?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  realWorldExamples?:
    | {
        country: string;
        year: number;
        description: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        outcome: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "economicIndicators".
 */
export interface EconomicIndicator {
  id: number;
  name: string;
  slug: string;
  category: 'growth' | 'employment' | 'inflation' | 'fiscal' | 'monetary' | 'trade' | 'social' | 'confidence';
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  shortDescription: string;
  /**
   * e.g., %, billions, points, index
   */
  unit: string;
  currentValue: number;
  /**
   * Starting value for scenarios
   */
  baselineValue: number;
  historicalValues?:
    | {
        period: string;
        value: number;
        id?: string | null;
      }[]
    | null;
  trend: 'improving' | 'stable' | 'declining' | 'volatile';
  ranges?: {
    optimal?: {
      min?: number | null;
      max?: number | null;
    };
    acceptable?: {
      min?: number | null;
      max?: number | null;
    };
    critical?: {
      dangerLow?: number | null;
      dangerHigh?: number | null;
    };
  };
  /**
   * JavaScript formula for calculating this indicator
   */
  formula?: string | null;
  /**
   * Other indicators that affect this one
   */
  dependencies?:
    | {
        indicator: string;
        weight: number;
        relationship: 'positive' | 'negative' | 'complex';
        id?: string | null;
      }[]
    | null;
  /**
   * Which roles can see this indicator
   */
  visibilityRoles?:
    | {
        role: string;
        precision: 'exact' | 'rounded' | 'range' | 'trend';
        delay?: number | null;
        id?: string | null;
      }[]
    | null;
  mmtPerspective?: {
    importance?: ('critical' | 'important' | 'moderate' | 'low' | 'misleading') | null;
    analysis?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    preferredRange?: {
      min?: number | null;
      max?: number | null;
    };
  };
  traditionalPerspective?: {
    importance?: ('critical' | 'important' | 'moderate' | 'low') | null;
    analysis?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    preferredRange?: {
      min?: number | null;
      max?: number | null;
    };
  };
  publicDisplay?: {
    showOnDashboard?: boolean | null;
    chartType?: ('line' | 'bar' | 'gauge' | 'number' | 'trend') | null;
    displayOrder?: number | null;
    /**
     * Hex color code for charts
     */
    color?: string | null;
  };
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "learningContent".
 */
export interface LearningContent {
  id: number;
  title: string;
  slug: string;
  contentType:
    | 'tutorial'
    | 'explanation'
    | 'case-study'
    | 'comparison'
    | 'historical'
    | 'quiz'
    | 'simulation'
    | 'video'
    | 'reading'
    | 'glossary';
  topic:
    | 'mmt'
    | 'traditional'
    | 'fiscal-policy'
    | 'monetary-policy'
    | 'inflation'
    | 'employment'
    | 'debt'
    | 'deficits'
    | 'growth'
    | 'trade'
    | 'central-banking'
    | 'currency-sovereignty'
    | 'job-guarantee'
    | 'basic-income'
    | 'crises';
  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';
  estimatedReadTime?: number | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  summary: string;
  keyPoints?:
    | {
        point: string;
        id?: string | null;
      }[]
    | null;
  mmtPerspective?: {
    position?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    keyArguments?:
      | {
          argument: string;
          id?: string | null;
        }[]
      | null;
    evidence?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  traditionalPerspective?: {
    position?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    keyArguments?:
      | {
          argument: string;
          id?: string | null;
        }[]
      | null;
    evidence?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  /**
   * Side-by-side comparison of MMT vs Traditional views
   */
  comparisonPoints?:
    | {
        aspect: string;
        mmtView: string;
        traditionalView: string;
        practicalImplication?: string | null;
        id?: string | null;
      }[]
    | null;
  realWorldExamples?:
    | {
        title: string;
        country: string;
        timeframe: string;
        description: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        outcome: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        lessonLearned: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Other content that should be understood first
   */
  prerequisites?:
    | {
        content: string;
        importance: 'essential' | 'recommended' | 'helpful';
        id?: string | null;
      }[]
    | null;
  /**
   * Content to explore next
   */
  followUpContent?:
    | {
        content: string;
        reason?: string | null;
        id?: string | null;
      }[]
    | null;
  media?:
    | {
        mediaFile?: (number | null) | Media;
        mediaType?: ('illustration' | 'chart' | 'video' | 'audio' | 'document') | null;
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  quiz?: {
    questions?:
      | {
          question: string;
          type: 'multiple-choice' | 'true-false' | 'short-answer' | 'ranking';
          options?:
            | {
                option: string;
                isCorrect?: boolean | null;
                id?: string | null;
              }[]
            | null;
          correctAnswer?: string | null;
          explanation: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          mmtExplanation?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          traditionalExplanation?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          id?: string | null;
        }[]
      | null;
    passingScore?: number | null;
  };
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  targetAudience?:
    | {
        audience?: ('students' | 'teachers' | 'policymakers' | 'public' | 'economists' | 'business') | null;
        id?: string | null;
      }[]
    | null;
  publishedDate?: string | null;
  lastUpdated?: string | null;
  isPublished?: boolean | null;
  isFeatured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'gameRoles';
        value: number | GameRole;
      } | null)
    | ({
        relationTo: 'gameScenarios';
        value: number | GameScenario;
      } | null)
    | ({
        relationTo: 'decisionOptions';
        value: number | DecisionOption;
      } | null)
    | ({
        relationTo: 'economicIndicators';
        value: number | EconomicIndicator;
      } | null)
    | ({
        relationTo: 'learningContent';
        value: number | LearningContent;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gameRoles_select".
 */
export interface GameRolesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  roleType?: T;
  description?: T;
  shortDescription?: T;
  responsibilities?:
    | T
    | {
        responsibility?: T;
        id?: T;
      };
  powers?:
    | T
    | {
        powerName?: T;
        powerDescription?: T;
        economicImpact?: T;
        mmtPerspective?: T;
        traditionalPerspective?: T;
        id?: T;
      };
  informationAccess?:
    | T
    | {
        economicData?: T;
        budgetData?: T;
        publicSentiment?: T;
      };
  maxPlayers?: T;
  difficulty?: T;
  gameplayTips?:
    | T
    | {
        tip?: T;
        id?: T;
      };
  avatar?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gameScenarios_select".
 */
export interface GameScenariosSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  scenarioType?: T;
  description?: T;
  backgroundStory?: T;
  learningObjectives?:
    | T
    | {
        objective?: T;
        id?: T;
      };
  initialConditions?:
    | T
    | {
        gdp?: T;
        inflation?: T;
        unemployment?: T;
        publicDebt?: T;
        budgetBalance?: T;
        interestRate?: T;
        publicSentiment?: T;
      };
  crisisEvents?:
    | T
    | {
        eventTitle?: T;
        eventDescription?: T;
        triggerRound?: T;
        economicImpact?:
          | T
          | {
              gdpImpact?: T;
              inflationImpact?: T;
              unemploymentImpact?: T;
              sentimentImpact?: T;
            };
        id?: T;
      };
  availableRoles?: T;
  requiredRoles?: T;
  difficulty?: T;
  estimatedDuration?: T;
  maxRounds?: T;
  successCriteria?:
    | T
    | {
        criterion?: T;
        targetValue?: T;
        comparisonType?: T;
        id?: T;
      };
  debriefingQuestions?:
    | T
    | {
        question?: T;
        perspective?: T;
        id?: T;
      };
  teacherNotes?: T;
  isActive?: T;
  featured?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "decisionOptions_select".
 */
export interface DecisionOptionsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  category?: T;
  description?: T;
  shortDescription?: T;
  availableToRoles?: T;
  prerequisites?:
    | T
    | {
        prerequisiteType?: T;
        condition?: T;
        value?: T;
        id?: T;
      };
  cost?:
    | T
    | {
        budgetCost?: T;
        politicalCost?: T;
        timeCost?: T;
      };
  immediateEffects?:
    | T
    | {
        gdpImpact?: T;
        inflationImpact?: T;
        unemploymentImpact?: T;
        publicSentimentImpact?: T;
        debtImpact?: T;
        budgetImpact?: T;
      };
  delayedEffects?:
    | T
    | {
        delayRounds?: T;
        gdpImpact?: T;
        inflationImpact?: T;
        unemploymentImpact?: T;
        publicSentimentImpact?: T;
        id?: T;
      };
  mmtAnalysis?:
    | T
    | {
        mmtRecommendation?: T;
        mmtReasoning?: T;
        mmtAlternative?: T;
      };
  traditionalAnalysis?:
    | T
    | {
        traditionalRecommendation?: T;
        traditionalReasoning?: T;
        traditionalConcerns?: T;
      };
  playerFeedback?:
    | T
    | {
        successMessage?: T;
        cautionMessage?: T;
        failureMessage?: T;
      };
  realWorldExamples?:
    | T
    | {
        country?: T;
        year?: T;
        description?: T;
        outcome?: T;
        id?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "economicIndicators_select".
 */
export interface EconomicIndicatorsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  category?: T;
  description?: T;
  shortDescription?: T;
  unit?: T;
  currentValue?: T;
  baselineValue?: T;
  historicalValues?:
    | T
    | {
        period?: T;
        value?: T;
        id?: T;
      };
  trend?: T;
  ranges?:
    | T
    | {
        optimal?:
          | T
          | {
              min?: T;
              max?: T;
            };
        acceptable?:
          | T
          | {
              min?: T;
              max?: T;
            };
        critical?:
          | T
          | {
              dangerLow?: T;
              dangerHigh?: T;
            };
      };
  formula?: T;
  dependencies?:
    | T
    | {
        indicator?: T;
        weight?: T;
        relationship?: T;
        id?: T;
      };
  visibilityRoles?:
    | T
    | {
        role?: T;
        precision?: T;
        delay?: T;
        id?: T;
      };
  mmtPerspective?:
    | T
    | {
        importance?: T;
        analysis?: T;
        preferredRange?:
          | T
          | {
              min?: T;
              max?: T;
            };
      };
  traditionalPerspective?:
    | T
    | {
        importance?: T;
        analysis?: T;
        preferredRange?:
          | T
          | {
              min?: T;
              max?: T;
            };
      };
  publicDisplay?:
    | T
    | {
        showOnDashboard?: T;
        chartType?: T;
        displayOrder?: T;
        color?: T;
      };
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "learningContent_select".
 */
export interface LearningContentSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  contentType?: T;
  topic?: T;
  difficulty?: T;
  estimatedReadTime?: T;
  content?: T;
  summary?: T;
  keyPoints?:
    | T
    | {
        point?: T;
        id?: T;
      };
  mmtPerspective?:
    | T
    | {
        position?: T;
        keyArguments?:
          | T
          | {
              argument?: T;
              id?: T;
            };
        evidence?: T;
      };
  traditionalPerspective?:
    | T
    | {
        position?: T;
        keyArguments?:
          | T
          | {
              argument?: T;
              id?: T;
            };
        evidence?: T;
      };
  comparisonPoints?:
    | T
    | {
        aspect?: T;
        mmtView?: T;
        traditionalView?: T;
        practicalImplication?: T;
        id?: T;
      };
  realWorldExamples?:
    | T
    | {
        title?: T;
        country?: T;
        timeframe?: T;
        description?: T;
        outcome?: T;
        lessonLearned?: T;
        id?: T;
      };
  prerequisites?:
    | T
    | {
        content?: T;
        importance?: T;
        id?: T;
      };
  followUpContent?:
    | T
    | {
        content?: T;
        reason?: T;
        id?: T;
      };
  media?:
    | T
    | {
        mediaFile?: T;
        mediaType?: T;
        caption?: T;
        id?: T;
      };
  quiz?:
    | T
    | {
        questions?:
          | T
          | {
              question?: T;
              type?: T;
              options?:
                | T
                | {
                    option?: T;
                    isCorrect?: T;
                    id?: T;
                  };
              correctAnswer?: T;
              explanation?: T;
              mmtExplanation?: T;
              traditionalExplanation?: T;
              id?: T;
            };
        passingScore?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  targetAudience?:
    | T
    | {
        audience?: T;
        id?: T;
      };
  publishedDate?: T;
  lastUpdated?: T;
  isPublished?: T;
  isFeatured?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}