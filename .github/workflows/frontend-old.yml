name: Frontend CI/CD

on:
  push:
    branches: [ frontend ]
    paths: 
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ frontend ]
    paths: 
      - 'frontend/**'

jobs:
  test:
    name: Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run linting
        run: |
          cd frontend
          npm run lint

      - name: Run type checking
        run: |
          cd frontend
          npx tsc --noEmit

      - name: Run tests
        run: |
          cd frontend
          npm run test --passWithNoTests
        env:
          CI: true

      - name: Build application
        run: |
          cd frontend
          npm run build
        env:
          NEXT_PUBLIC_API_URL: http://localhost:3000

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Install Playwright
        run: |
          cd frontend
          npx playwright install --with-deps

      - name: Build application
        run: |
          cd frontend
          npm run build

      - name: Start application
        run: |
          cd frontend
          npm start &
          sleep 10
        env:
          NEXT_PUBLIC_API_URL: http://localhost:3000

      - name: Run Playwright tests
        run: |
          cd frontend
          npx playwright test
        env:
          CI: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 7

  lighthouse:
    name: Lighthouse Performance
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build application
        run: |
          cd frontend
          npm run build

      - name: Serve application
        run: |
          cd frontend
          npm start &
          sleep 10

      - name: Run Lighthouse
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: './frontend/lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t frontend:${{ github.sha }} -f frontend/Dockerfile frontend/

  deploy:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/frontend' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        run: |
          echo "Frontend deployment would happen here"
          # Example: Deploy to Vercel, Netlify, or other hosting platform
          # npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: |
          cd frontend
          npm audit --audit-level moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --file=frontend/package.json
        continue-on-error: true
