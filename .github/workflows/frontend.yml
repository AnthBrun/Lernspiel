name: Frontend CI/CD

on:
  push:
    branches: [ frontend ]
    paths: 
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ frontend ]
    paths: 
      - 'frontend/**'

jobs:
  test:
    name: Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Ensure package-lock.json exists
        run: |
          cd frontend
          if [ ! -f "package-lock.json" ]; then
            echo "No package-lock.json found, generating one..."
            npm i --package-lock-only
          fi

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run linting
        run: |
          cd frontend
          npm run lint

      - name: Run type checking
        run: |
          cd frontend
          npm run type-check

      - name: Run tests
        run: |
          cd frontend
          npm run test

  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Ensure package-lock.json exists
        run: |
          cd frontend
          if [ ! -f "package-lock.json" ]; then
            echo "No package-lock.json found, generating one..."
            npm i --package-lock-only
          fi

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build application
        run: |
          cd frontend
          npm run build

      - name: Run Lighthouse CI
        run: |
          cd frontend
          npm install -g @lhci/cli@0.12.x
          lhci autorun

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Ensure package-lock.json exists
        run: |
          cd frontend
          if [ ! -f "package-lock.json" ]; then
            echo "No package-lock.json found, generating one..."
            npm i --package-lock-only
          fi

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Install Playwright
        run: |
          cd frontend
          npx playwright install

      - name: Run Playwright tests
        run: |
          cd frontend
          npm run test:e2e

  deploy:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: [test, build, e2e-tests]
    if: github.ref == 'refs/heads/frontend' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Deploy to Vercel
        run: |
          echo "Frontend deployment to Vercel would happen here"
          # Example using Vercel CLI:
          # npx vercel --token ${{ secrets.VERCEL_TOKEN }} --prod

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Ensure package-lock.json exists
        run: |
          cd frontend
          if [ ! -f "package-lock.json" ]; then
            echo "No package-lock.json found, generating one..."
            npm i --package-lock-only
          fi

      - name: Run security audit
        run: |
          cd frontend
          npm audit --audit-level moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --file=frontend/package.json
        continue-on-error: true
